def main():
    f = open('testcase1.txt','r')   
    value=[]
    occupied_positions=[]
    with open('testcase1.txt') as f:
        for i in range(0,13):
            line=f.readline().rstrip()
            if(i==0):
                task=int(line)
            elif(i==1):
                player=line
            elif(i==2):
                cutt_off_depth=int(line)
            elif(i>2 and i<=7):
                ls=[]
                ls=map(int,line.split())
                value.append(ls)
            elif(i>7):
                occ=[]
                for c in line:
                    occ.append(c)
                occupied_positions.append(occ)
    print task
    print player
    print cutt_off_depth
    print value
    print occupied_positions
    
    if(player=='X'):
        flag=1
    else:
        flag=2
        
    if(task==2):
        evaluation_function=0
        maxi=0
        playerX=0
        playerO=0
        
        for i in range(5):
            for j in range(5):
                if(flag==1):
                    if(occupied_positions[i][j]=='X'):
                        playerX += value[i][j]
                    elif(occupied_positions[i][j]=='O'):
                        playerO += value[i][j]
                else:
                    if(occupied_positions[i][j]=='O'):
                        playerX += value[i][j]
                    elif(occupied_positions[i][j]=='X'):
                        playerO += value[i][j]
    
    evaluation_function=playerX-playerO
    
    print evaluation_function
    
    #GreedyBFS
    max_evaluation=evaluation_function
    temp=evaluation_function
    pos_i=0
    pos_j=0
    x=0
    for i in range(5):
        for j in range(5):
            if(occupied_positions[i][j]=='*'):
                t=value[i][j]
                if(flag==1):
                    if(i!=0 and occupied_positions[i-1][j]=='O'):                    
                        t+=value[i-1][j]
                   # occupied_positions[i-1][j]='X'
                    if(i!=4 and occupied_positions[i+1][j]=='O'):
                        t+=value[i+1][j]
                    #occupied_positions[i+1][j]='X'
                    if(j!=4 and occupied_positions[i][j+1]=='O'):
                        t+=value[i][j+1]
                    #occupied_positions[i][j+1]='X'
                    if(j!=0 and occupied_positions[i][j-1]=='O'):
                    #occupied_positions[i][j-1]='X'
                        t+=value[i][j-1]
                    if(t>max_evaluation):
                        max_evaluation=t
                        pos_i=i
                        pos_j=j
                else:
                    if(i!=0 and occupied_positions[i-1][j]=='X'):                    
                        t+=value[i-1][j]
                   # occupied_positions[i-1][j]='X'
                    if(i!=4 and occupied_positions[i+1][j]=='X'):
                        t+=value[i+1][j]
                    #occupied_positions[i+1][j]='X'
                    if(j!=4 and occupied_positions[i][j+1]=='X'):
                        t+=value[i][j+1]
                    #occupied_positions[i][j+1]='X'
                    if(j!=0 and occupied_positions[i][j-1]=='X'):
                    #occupied_positions[i][j-1]='X'
                        t+=value[i][j-1]
                    if(t>max_evaluation):
                        max_evaluation=t
                        pos_i=i
                        pos_j=j    
    
    print pos_i,pos_j
    if(flag==1):
        i=pos_i
        j=pos_j
        if(i!=0 and occupied_positions[i-1][j]=='O'):
            occupied_positions[i-1][j]='X'
            print occupied_positions[i-1][j]
        if(i!=4 and occupied_positions[i+1][j]=='O'):
            occupied_positions[i+1][j]='X'
            print occupied_positions[i+1][j]
        if(j!=0 and occupied_positions[i][j-1]=='O'):
            occupied_positions[i][j-1]='X'
            print occupied_positions[i][j-1]
        if(j!=4 and occupied_positions[i][j+1]=='O'):
            occupied_positions[i][j+1]='X'
            print occupied_positions[i][j+1]
           
    else:
        i=pos_i
        j=pos_j
        if(i!=0 and occupied_positions[i-1][j]=='X'):
            occupied_positions[i-1][j]='O'
            print occupied_positions[i-1][j]
        if(i!=4 and occupied_positions[i+1][j]=='X'):
            occupied_positions[i+1][j]='O'
            print occupied_positions[i+1][j]
        if(j!=0 and occupied_positions[i][j-1]=='X'):
            occupied_positions[i][j-1]='O'
            print occupied_positions[i][j-1]
        if(j!=4 and occupied_positions[i][j+1]=='X'):
            occupied_positions[i][j+1]='O'
            print occupied_positions[i][j+1]
                        
            
    print pos_i,pos_j,value[pos_i][pos_j],max_evaluation    
    evaluation_function += max_evaluation
    print evaluation_function
    occupied_positions[pos_i][pos_j]=player
    print occupied_positions
    
    r1 = open('next_state.txt','w+')
    for i in range(5):
        for j in range(5):
            r1.write(occupied_positions[i][j])
        r1.write("\n")    
    r1.close()
        
    
    #print content
    
    
    f.close()

if __name__ == "__main__":
  main()